apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply from: 'checkstyle/checkstyle.gradle'

ext {
    APPLICATION_ID = "com.flatstack.android"

    isTravis = "true".equals(System.getenv("TRAVIS")) // change if use not travis

    commitMessage = 'git log -1 --pretty=%B'.execute().text.trim()
}

android {
    compileSdkVersion TARGET_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION

        applicationId APPLICATION_ID
        versionCode 1
        versionName '0.1.0'

//        TODO uncomment after fix https://code.google.com/p/android/issues/detail?id=202973
//        and after annotation processing completed
//        jackOptions { enabled true }
    }

    productFlavors {
        staging {
            buildConfigField "String", "API_URL", "\"https://example-staging.com\""
            applicationIdSuffix ".staging"
        }

        production {
            buildConfigField "String", "API_URL", "\"https://example.com\""
        }
    }

//    signingConfigs {
//        release {
//            def props = new Properties()
//            props.load(new FileInputStream(file("$rootDir/keys.properties")))
//            storeFile file("$rootDir/your.jks")
//            storePassword props['storePassword']
//            keyAlias props['keyAlias']
//            keyPassword props['keyPassword']
//        }
//    }

    buildTypes {
        debug {
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        textReport true
        textOutput "stdout"
        enable 'IconExpectedSize', 'EasterEgg', 'SelectableText', 'StopShip', 'TypographyQuotes', 'UnusedIds'
        disable 'InvalidPackage', 'GradleDependency'
        lintConfig file("$projectDir/lint.xml")
        warningsAsErrors true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile 'com.squareup.retrofit2:retrofit:2.2.0'

    compile 'com.jakewharton:butterknife:7.0.0' // view injection
    compile 'com.jakewharton.timber:timber:2.5.0' // logging

    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.google.code.gson:gson:2.4'

    compile 'io.reactivex:rxandroid:1.0.1' // async job and events
    compile 'io.reactivex:rxjava:1.0.14'

    testCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.assertj:assertj-android:1.0.0'
}

configurations {
    testCompile.exclude module: 'commons-logging'
    testCompile.exclude module: 'httpclient'
}

apply from: "quality.gradle"
